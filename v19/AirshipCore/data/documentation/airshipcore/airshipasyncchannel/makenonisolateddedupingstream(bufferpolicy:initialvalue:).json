{"sections":[],"abstract":[{"text":"Makes a stream that is nonisolated from the actor by wrapping the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"actor stream in an async stream. Values will only be emitted if they are different than the previous value."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeNonIsolatedDedupingStream"},{"kind":"text","text":"("},{"text":"bufferPolicy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BufferPolicy","identifier":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel\/BufferPolicy","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC12BufferPolicyO"},{"kind":"text","text":" = .unbounded, "},{"text":"initialValue","kind":"externalParam"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp","text":"T","kind":"typeIdentifier"},{"text":"?)? = nil) -> ","kind":"text"},{"preciseIdentifier":"s:ScS","kind":"typeIdentifier","text":"AsyncStream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp","text":"T"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","kind":"typeIdentifier","text":"Equatable"}],"platforms":["Mac Catalyst"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"bufferPolicy","content":[{"inlineContent":[{"type":"text","text":"The buffer policy."}],"type":"paragraph"}]},{"name":"initialValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optional initial value closure. If provided and the value is nil, it will finish the stream."}]}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"An AsyncStream."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/airshipcore\/airshipasyncchannel\/makenonisolateddedupingstream(bufferpolicy:initialvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel\/makeNonIsolatedDedupingStream(bufferPolicy:initialValue:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"role":"symbol","roleHeading":"Instance Method","modules":[{"name":"AirshipCore"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Sendable"},{"text":".","type":"text"}]},"title":"makeNonIsolatedDedupingStream(bufferPolicy:initialValue:)","externalID":"s:11AirshipCore0A12AsyncChannelC29makeNonIsolatedDedupingStream12bufferPolicy12initialValueScSyxGAC06BufferK0Oyx_G_xSgyYaYbcSgtSQRzrlF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeNonIsolatedDedupingStream"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"bufferPolicy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"BufferPolicy","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC12BufferPolicyO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": (() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"T","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp","kind":"typeIdentifier"},{"kind":"text","text":"?)?) -> "},{"preciseIdentifier":"s:ScS","text":"AsyncStream","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp"},{"text":">","kind":"text"}],"extendedModule":"AirshipCore","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore","doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel"]]},"references":{"doc://com.urbanairship.AirshipCore/documentation/AirshipCore":{"kind":"symbol","type":"topic","identifier":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore","url":"\/documentation\/airshipcore","title":"AirshipCore","abstract":[],"role":"collection"},"doc://com.urbanairship.AirshipCore/documentation/AirshipCore/AirshipAsyncChannel":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AirshipAsyncChannel","kind":"identifier"}],"url":"\/documentation\/airshipcore\/airshipasyncchannel","abstract":[{"type":"text","text":"Simple implementation of a "},{"type":"codeVoice","code":"channel"},{"text":" that allows multiple AsyncStreams of the same data.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"AirshipAsyncChannel","kind":"identifier"}],"title":"AirshipAsyncChannel","identifier":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel"},"doc://com.urbanairship.AirshipCore/documentation/AirshipCore/AirshipAsyncChannel/BufferPolicy":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"BufferPolicy","kind":"identifier"}],"abstract":[],"navigatorTitle":[{"text":"BufferPolicy","kind":"identifier"}],"url":"\/documentation\/airshipcore\/airshipasyncchannel\/bufferpolicy","type":"topic","title":"AirshipAsyncChannel.BufferPolicy","role":"symbol","kind":"symbol","identifier":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel\/BufferPolicy"},"doc://com.urbanairship.AirshipCore/documentation/AirshipCore/AirshipAsyncChannel/makeNonIsolatedDedupingStream(bufferPolicy:initialValue:)":{"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Makes a stream that is nonisolated from the actor by wrapping the"},{"type":"text","text":" "},{"text":"actor stream in an async stream. Values will only be emitted if they are different than the previous value.","type":"text"}],"title":"makeNonIsolatedDedupingStream(bufferPolicy:initialValue:)","url":"\/documentation\/airshipcore\/airshipasyncchannel\/makenonisolateddedupingstream(bufferpolicy:initialvalue:)","identifier":"doc:\/\/com.urbanairship.AirshipCore\/documentation\/AirshipCore\/AirshipAsyncChannel\/makeNonIsolatedDedupingStream(bufferPolicy:initialValue:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"makeNonIsolatedDedupingStream","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"bufferPolicy"},{"kind":"text","text":": "},{"text":"BufferPolicy","kind":"typeIdentifier","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC12BufferPolicyO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"initialValue"},{"text":": (() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp","text":"T","kind":"typeIdentifier"},{"text":"?)?) -> ","kind":"text"},{"text":"AsyncStream","kind":"typeIdentifier","preciseIdentifier":"s:ScS"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:11AirshipCore0A12AsyncChannelC1Txmfp"},{"text":">","kind":"text"}],"type":"topic"}}}